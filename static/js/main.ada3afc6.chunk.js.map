{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","api.ts","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","onSubmit","event","preventDefault","MoviesList","movies","map","imdbId","FindMovie","onAddMovies","useState","setTitle","moviePreview","setMoviePreview","isError","setIsError","isLoading","setIsLoading","isMoviePreview","handleFindMovie","query","trim","fetch","then","res","json","catch","Response","Error","getMovie","Poster","Title","Plot","imdbID","finally","htmlFor","type","id","placeholder","classNames","value","onChange","target","onClick","disabled","length","App","setMovies","some","addedMovie","prevMovies","ReactDOM","render","document","getElementById"],"mappings":"8TAWaA,EAA6B,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACxC,sBAAKC,UAAU,OAAO,UAAQ,YAA9B,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,gBAAlB,SACE,qBACE,UAAQ,cACRC,IAAsB,QAAjBF,EAAMG,OAAmBH,EAAMG,OARxC,4DASIC,IAAI,kBAIV,sBAAKH,UAAU,eAAf,UACE,sBAAKA,UAAU,QAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,iBAAlB,SACE,qBACEC,IAAI,wBACJE,IAAI,aAIV,qBAAKH,UAAU,gBAAf,SACE,mBAAGA,UAAU,aAAa,UAAQ,aAAlC,SAAgDD,EAAMK,aAI1D,sBAAKJ,UAAU,UAAU,UAAQ,mBAAjC,UACGD,EAAMM,YACP,uBACA,mBACEC,KAAI,qCAAgCP,EAAMQ,SAC1C,UAAQ,WACRC,SAAU,SAAAC,GAAK,OAAIA,EAAMC,kBAH3B,4BC9BKC,EAA8B,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACzC,qBAAKZ,UAAU,SAAf,SACGY,EAAOC,KAAI,SAAAd,GAAK,OACf,cAAC,EAAD,CAEEA,MAAOA,GADFA,EAAMe,c,wBCDZ,IAAMC,EAA6B,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YAC3C,EAA0BC,mBAAS,IAAnC,mBAAOb,EAAP,KAAcc,EAAd,KACA,EAAwCD,mBAAuB,MAA/D,mBAAOE,EAAP,KAAqBC,EAArB,KACA,EAA8BH,oBAAS,GAAvC,mBAAOI,EAAP,KAAgBC,EAAhB,KACA,EAAkCL,oBAAS,GAA3C,mBAAOM,EAAP,KAAkBC,EAAlB,KAEMC,EAAkC,OAAjBN,EAOjBO,EAAkB,WACtB,IAAMC,EAAQvB,EAAMwB,OAEpBJ,GAAa,GAETG,GC1BD,SAAkBA,GACvB,OAAOE,MAAM,GAAD,OAHE,0CAGF,cAAiBF,IAC1BG,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBC,OAAM,iBAAO,CACZC,SAAU,QACVC,MAAO,uBDsBPC,CAAST,GACNG,MAAK,SAAA/B,GAGJ,GAAiB,UAFIA,EAAbmC,SAGNZ,GAAW,OACN,CACL,MAEIvB,EADFsC,EADF,EACEA,OAAQC,EADV,EACUA,MAAOC,EADjB,EACiBA,KAAMC,EADvB,EACuBA,OAGvBpB,EAAgB,CACdhB,MAAOkC,EACPjC,YAAakC,EACbzB,OAAQ0B,EACRjC,QAASiC,EACTtC,OAAQmC,IAGVf,GAAW,OAGdW,OAAM,kBAAMX,GAAW,MACvBmB,SAAQ,kBAAMjB,GAAa,OAalC,OACE,qCACE,uBAAMxB,UAAU,aAAaQ,SAAU,SAAAC,GAAK,OAAIA,EAAMC,kBAAtD,UACE,sBAAKV,UAAU,QAAf,UACE,uBAAOA,UAAU,QAAQ0C,QAAQ,cAAjC,yBAIA,qBAAK1C,UAAU,UAAf,SACE,uBACE,UAAQ,aACR2C,KAAK,OACLC,GAAG,cACHC,YAAY,0BACZ7C,UAAW8C,IAAW,QAAS,CAAE,YAAazB,IAC9C0B,MAAO3C,EACP4C,SA/DgB,SAACvC,GAC3BS,EAAST,EAAMwC,OAAOF,OACtBzB,GAAW,QAiEJD,GACC,mBAAGrB,UAAU,iBAAiB,UAAQ,eAAtC,qDAMJ,sBAAKA,UAAU,mBAAf,UACE,qBAAKA,UAAU,UAAf,SACE,wBACE,UAAQ,eACR2C,KAAK,SACL3C,UAAW8C,IACT,kBACA,CACE,aAAcvB,IAGlB2B,QAAS,kBAAMxB,KACfyB,SAAkC,IAAxB/C,EAAMwB,OAAOwB,OAVzB,SAYoB,OAAjBjC,EAAwB,eAAiB,mBAI7CM,GACC,qBAAKzB,UAAU,UAAf,SACE,wBACE,UAAQ,YACR2C,KAAK,SACL3C,UAAU,oBACVkD,QA5DS,WACjB/B,GACFH,EAAYG,GAGdD,EAAS,IACTE,EAAgB,OAkDN,qCAaPK,GACC,sBAAKzB,UAAU,YAAY,UAAQ,mBAAnC,UACE,oBAAIA,UAAU,QAAd,qBACA,cAAC,EAAD,CAAWD,MAAOoB,WE7HfkC,EAAM,WACjB,MAA4BpC,mBAAkB,IAA9C,mBAAOL,EAAP,KAAe0C,EAAf,KAYA,OACE,sBAAKtD,UAAU,OAAf,UACE,qBAAKA,UAAU,eAAf,SACE,cAAC,EAAD,CAAYY,OAAQA,MAGtB,qBAAKZ,UAAU,UAAf,SACE,cAAC,EAAD,CAAWgB,YAjBA,SAACjB,GACMa,EAAO2C,MAAK,SAAAC,GAAU,OAC1CzD,EAAMe,SAAW0C,EAAW1C,WAI5BwC,GAAU,SAAAG,GAAU,4BAAQA,GAAR,CAAoB1D,gBCX9C2D,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.ada3afc6.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nconst DEFAULT_PICTURE\n    = 'https://via.placeholder.com/360x270.png?text=no%20preview';\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie.imgUrl !== 'N/A' ? movie.imgUrl : DEFAULT_PICTURE}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.description}\n        <br />\n        <a\n          href={`https://www.imdb.com/title/${movie.imdbUrl}`}\n          data-cy=\"movieURL\"\n          onSubmit={event => event.preventDefault()}\n        >\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import React, { useState } from 'react';\nimport './FindMovie.scss';\nimport classNames from 'classnames';\nimport { getMovie } from '../../api';\nimport { Movie } from '../../types/Movie';\nimport { ResponseError } from '../../types/ReponseError';\nimport { MovieData } from '../../types/MovieData';\nimport { MovieCard } from '../MovieCard';\n\ntype Props = {\n  onAddMovies: (movies: Movie) => void,\n};\n\nexport const FindMovie: React.FC<Props> = ({ onAddMovies }) => {\n  const [title, setTitle] = useState('');\n  const [moviePreview, setMoviePreview] = useState<Movie | null>(null);\n  const [isError, setIsError] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const isMoviePreview = moviePreview !== null;\n\n  const handleOnChangeTitle = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n    setIsError(false);\n  };\n\n  const handleFindMovie = () => {\n    const query = title.trim();\n\n    setIsLoading(true);\n\n    if (query) {\n      getMovie(query)\n        .then(movie => {\n          const { Response } = movie as ResponseError;\n\n          if (Response === 'False') {\n            setIsError(true);\n          } else {\n            const {\n              Poster, Title, Plot, imdbID,\n            } = movie as MovieData;\n\n            setMoviePreview({\n              title: Title,\n              description: Plot,\n              imdbId: imdbID,\n              imdbUrl: imdbID,\n              imgUrl: Poster,\n            });\n\n            setIsError(false);\n          }\n        })\n        .catch(() => setIsError(true))\n        .finally(() => setIsLoading(false));\n    }\n  };\n\n  const handleAddMovie = () => {\n    if (moviePreview) {\n      onAddMovies(moviePreview);\n    }\n\n    setTitle('');\n    setMoviePreview(null);\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\" onSubmit={event => event.preventDefault()}>\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={classNames('input', { 'is-danger': isError })}\n              value={title}\n              onChange={handleOnChangeTitle}\n            />\n          </div>\n\n          {isError && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={classNames(\n                'button is-light',\n                {\n                  'is-loading': isLoading,\n                },\n              )}\n              onClick={() => handleFindMovie()}\n              disabled={title.trim().length === 0}\n            >\n              {moviePreview !== null ? 'Search again' : 'Find a movie'}\n            </button>\n          </div>\n\n          {isMoviePreview && (\n            <div className=\"control\">\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={handleAddMovie}\n              >\n                Add to the list\n              </button>\n            </div>\n          )}\n        </div>\n      </form>\n\n      {isMoviePreview && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={moviePreview} />\n        </div>\n      )}\n    </>\n  );\n};\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=8580105';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const addMovie = (movie: Movie) => {\n    const searchedMovie = movies.some(addedMovie => (\n      movie.imdbId === addedMovie.imdbId\n    ));\n\n    if (!searchedMovie) {\n      setMovies(prevMovies => [...prevMovies, movie]);\n    }\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie onAddMovies={addMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}